stages:
  - build
  - docker
  - deploy

.base-docker:
  image: registry.ulbricht.casa/docker-images/buildah:latest
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | buildah login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "$DOCKERHUB_PASSWORD" | buildah login -u "$DOCKERHUB_USER" --password-stdin docker.io

test:
  image: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/oven/bun:latest
  stage: build
  script:
    - bun install
    - bun run lint
    - bun run build
  artifacts:
    paths:
      - build
      - node_modules

docker-build:
  stage: docker
  extends: .base-docker
  variables:
    IMG: $CI_REGISTRY_IMAGE/$ARCH:2.0.$CI_PIPELINE_IID
  script:
    - buildah build
      --platform=linux/$ARCH
      --build-arg "MAIL_PASS=${MAIL_PASS}"
      --build-arg "MAIL_SERVER=${MAIL_SERVER}"
      --build-arg "MAIL_PORT=${MAIL_PORT}"
      --build-arg "MAIL_USER=${MAIL_USER}"
      --build-arg "MAIL_FROM=${MAIL_FROM}"
      --build-arg CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX=$CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX
      -t $IMG
      $CI_PROJECT_DIR
    - buildah push $IMG
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-$ARCH

merge-manifests:
  stage: deploy
  extends: .base-docker
  variables:
    FQ_IMAGE_NAME: $CI_REGISTRY_IMAGE:$TAG
  script:
    - buildah manifest create $FQ_IMAGE_NAME
    - buildah manifest add $FQ_IMAGE_NAME docker://$CI_REGISTRY_IMAGE/amd64:$TAG
    - buildah manifest add $FQ_IMAGE_NAME docker://$CI_REGISTRY_IMAGE/arm64:$TAG
    - buildah manifest push --all $FQ_IMAGE_NAME
  parallel:
    matrix:
      - TAG: 2.0.$CI_PIPELINE_IID
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

trigger-kube:
  variables:
    TAG: 2.0.${CI_PIPELINE_IID}
  needs:
    - job: merge-manifests
  stage: deploy
  trigger: server-management/main-server.ulbricht.casa/jinya.de
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
